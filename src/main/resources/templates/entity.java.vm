package ${package.Entity};

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
#if(${entityLombokModel})
#end

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${entityLombokModel})
@Data
#end
#if(${table.comment})
@ApiModel("${table.comment}")
#end
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable{
#end

    private static final long serialVersionUID=1L;

## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
#if(${field.keyFlag})
    #set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
#end
## 乐观锁注解
#if(${versionFieldName}==${field.name})
    @Version
#end

## 主键
#if(${field.keyIdentityFlag})
    @Id
    @GeneratedValue(generator = "JDBC")
#end
## 逻辑删除注解
#if(${logicDeleteFieldName}==${field.name})
    @TableLogic
#end
#if("$!field.comment" != "")
    @ApiModelProperty(value ="${field.comment}",dataType = "${field.propertyType}")
#end
    private ${field.propertyType} ${field.propertyName};
#end
## ----------  END 字段循环遍历  ----------

###if(!${entityLombokModel})
##    #foreach($field in ${table.fields})
##        #if(${field.propertyType.equals("boolean")})
##            #set($getprefix="is")
##        #else
##            #set($getprefix="get")
##        #end
##
##    public ${field.propertyType} ${getprefix}${field.capitalName}(){
##            return ${field.propertyName};
##            }
##
##        #if(${entityBuilderModel})
##        public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}){
##        #else
##        public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
##        #end
##            this.${field.propertyName} = ${field.propertyName};
##        #if(${entityBuilderModel})
##                return this;
##        #end
##            }
##    #end
###end
##
###if(${entityColumnConstant})
##    #foreach($field in ${table.fields})
##    public static final String ${field.name.toUpperCase()} ="${field.name}";
##
##    #end
###end
###if(${entityLombokModel})
##@Override
##public String toString() {
##        return "${entity}{" +
##    #foreach($field in ${table.fields})
##        #if($!{velocityCount}==1)
##                "${field.propertyName}=" + ${field.propertyName} +
##        #else
##                ", ${field.propertyName}=" + ${field.propertyName} +
##        #end
##    #end
##        "}";
##        }
###end
}
